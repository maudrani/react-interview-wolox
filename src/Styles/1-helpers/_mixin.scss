@mixin flex($direction: row, $justify: center, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}


@mixin griding($rows, $cols, $gap: 0) {
    display: grid;
    grid-template-rows: $rows;
    grid-template-columns: $cols;
    grid-gap: $gap;
}


@mixin stylizeButton($style, $color) {
    @if $style=='outline' {
        background-color: rgba(0, 0, 0, 0);
        color: $color;

        &:hover {
            &:active {
                transform: scale(1.2);
            }

            background-color: $color;
            color: white;
        }
    }

    @else {
        color: white;
        background-color: $color;

        box-shadow: 0px 4px 10px 0px rgba(0, 0, 0, 0.07);

        &:hover {
            &:active {
                transform: scale(1.2);
            }

            background-color: rgba(0, 0, 0, 0);
            color: $color;
        }
    }

    @include flex();

    padding: 0.7rem 4rem;
    border: 3px solid $color;
    border-radius: 8vh;
    font-size: 1rem;

    &:hover {
        cursor: pointer;
    }
}


@mixin bgImageOptions($size: contain, $repeat: no-repeat, $position: center) {
    background-size: $size;
    background-repeat: $repeat;
    background-position: $position;
}

@mixin boxShadow($type: 1) {
    @if $type==1 {
        box-shadow: 0px 4px 10px 0px rgba(0, 0, 0, 0.07);
    }

    @if $type==2 {
        box-shadow: 0px 4px 13px 0px rgba(0, 0, 0, 0.1);
    }

    @if $type==3 {
        box-shadow: 0px 4px 16px 0px rgba(0, 0, 0, 0.2);
    }

}


// Fonts for mobile
@mixin multiplyFontSize($value) {

    @each $name,
    $size in $font-sizes {
        .#{$name} {
            font-size: calc(#{$size} * #{$value});
        }
    }
}